<launch>
  <!-- args denote the type of launch with what parameters depending on platform or nodes to avoid etc -->
  <arg name="RN" default="C"/> <!-- Robot_Name = "Y" for Yellow or "C" for Clear base plate acrylic -->
  <arg name="Pl" default="Pi"/>   <!-- Platform is either "Ub" or "Pi". Ub runs avoids Pi GPIO-->
  <arg name="SLAM" default="True"/>   <!-- True/False for running SLAM nodes -->
  <arg name="YD" default="True"/>    <!-- True/False for running YDLidar node -->
  <arg name="RV" default="True"/>    <!-- True/False for running Rvis with custom config -->

    <!-- Launch Parameters: -->
  <param name="Robot_Name" value="$(arg RN)"/>
  <param name="Platform" value="$(arg Pl)"/>
  <param name="Wheel_Radius_m" value="0.025"/>
  <param name="Robot_Width" value="0.185"/>
  <param name="Max_Wheel_Speed" value="0.075"/>
  <param name="Min_Wheel_Speed" value="0.005"/>
  <param name="Wheel_Acceleration" value="0.15"/>
  <param name="Number_Poles_Stepper" value="200"/>
  <param name="cmd_vel_scale" value="1"/>
  <!-- Derived Parameters, properly derived in Parameter_Init.py-->
  <param name="Ticks_Per_Meter" value="12723"/>
  <param name="encoder_min" value="0"/>
  <param name="encoder_max" value="200"/>
  <!-- Parameters are recalculated with .py script below-->
  <node pkg ="autonomous_bot"
        type="Parameter_Init.py"
        name="Parameter_Init"
        output="screen">
  </node>
  
  <!-- RVIZ Launcher: -->
  <group if="$(eval arg('RV') == True)">
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find autonomous_bot)/rviz_config_SLAM.rviz" />
  </group>
  
  <!-- YDLidar Launcher: -->
  <group if="$(eval arg('YD') == True)">
    <include file="$(find autonomous_bot)/launch/YD.launch">
    </include>
  </group>
  
  <!-- SLAM Launcher: -->
  <group if="$(eval arg('SLAM') == True)">
    <include file="$(find autonomous_bot)/launch/Gmapping.launch">
    </include>
  </group>
  <group if="$(eval arg('SLAM') == False)">
    <node pkg="tf" type="static_transform_publisher" name="map_to_odom"
    args="0.0 0.0 0. 0.0 0.0  0.0 /map /odom 5" />
  </group>
  
  <!-- Universal nodes -->
  <group ns="L">
    <node pkg ="autonomous_bot"
        type="velocity_controller.py"
        name="Velocity_Control_node"
        output="screen"
        args="Left">
    </node>
  </group>
  <group ns="R">
    <node pkg ="autonomous_bot"
        type="velocity_controller.py"
        name="Velocity_control_node"
        output="screen"
        args="Right">
    </node>
  </group>
  <node pkg ="autonomous_bot"
        type="diff_tf.py"
        name="diff_tf"
        output="screen">
  </node>
  <group ns="L">
    <node pkg ="autonomous_bot"
        type="stepper_GPIO.py"
        name="GPIO_node"
        output="screen"
        args="Left">
    </node>
  </group>
  <group ns="R">
    <node pkg ="autonomous_bot"
        type="stepper_GPIO.py"
        name="GPIO_node"
        output="screen"
        args="Right">
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link"
  args="0.0 0.0 0.0 0.0 0.0  0.0 /base_footprint /base_link 5" />
</launch>
